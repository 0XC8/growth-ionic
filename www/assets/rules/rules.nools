define SkillCal {
  constructor : function(skills){
    this.text = '';
    this.backendSkill = skills.backend;
    this.frontSkill = skills.front;
    this.devOpsSkill = skills.devops;
    this.codingSkill = skills.coding;
    this.analyticsSkill = skills.analytics;
  }
}

rule BasicProgrammer {
    when {
        skill : SkillCal skill.frontSkill  < 4;
        skill : SkillCal skill.backendSkill < 4;
    }
    then {
        skill.text = "后台与前端都有些经验，不过还是需要一些提高。";
        modify(skill);
        retract(skill);
    }
}

rule GoodButNeedDevOps {
    when {
        skill : SkillCal skill.frontSkill  >= 4;
        skill : SkillCal skill.backendSkill >= 4;
        skill : SkillCal skill.devOpsSkill <= 3;
    }
    then {
        skill.text = "后台与前端都经验丰富的开发者，然而看起来，还需要一点DevOps方面的经验。";
        modify(skill);
        retract(skill);
    }
}

rule CodingNeedImprove {
    when {
        skill : SkillCal skill.frontSkill  >= 4;
        skill : SkillCal skill.backendSkill >= 4;
        skill : SkillCal skill.devOpsSkill >= 4;
        skill : SkillCal skill.codingSkill <= 3;
    }
    then {
        skill.text = "后台与前端都经验丰富的开发者，DevOps方面的经验也挺丰富的。不过，你写代码的质量有待商榷。";
        modify(skill);
        retract(skill);
    }
}

rule VeryGood {
    when {
        skill : SkillCal skill.frontSkill  >= 4;
        skill : SkillCal skill.backendSkill >= 4;
        skill : SkillCal skill.devOpsSkill >= 3;
        skill : SkillCal skill.codingSkill >= 4;
        skill : SkillCal skill.analyticsSkill < 4;
    }
    then {
        skill.text = "后台与前端都经验丰富的开发者，DevOps方面的经验也挺丰富的。呼呼，你的代码写得也很好嘛。";
        modify(skill);
        retract(skill);
    }
}

rule Better {
    when {
        skill : SkillCal skill.frontSkill  >= 4;
        skill : SkillCal skill.backendSkill >= 4;
        skill : SkillCal skill.devOpsSkill >= 3;
        skill : SkillCal skill.codingSkill >= 4;
        skill : SkillCal skill.analyticsSkill >= 4;
    }
    then {
        skill.text = "后台与前端都经验丰富的开发者，DevOps方面的经验也蛮丰富的。你的代码还写得那么好，也会分析技能，是想给Growth提供建议吗？";
        modify(skill);
        retract(skill);
    }
}
